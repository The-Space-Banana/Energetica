"""This file contains all the data needed for the game"""

# TODO: it would be better to store the relevant data in a non-code file

from datetime import timedelta

from .database.player import Player

const_config = {
    "assets": {
        "steam_engine": {
            "name": "Steam engine",
            "type": "Controllable",
            "base_price": 10_000,  # [Â¤]
            "base_power_generation": 820_000,  # [W]
            "base_construction_time": timedelta(hours=8).total_seconds(),  # [in-game seconds]
            "construction_power_factor": 0.4,  # fraction of power gen during construction
            "base_construction_pollution": 17_520,  # [kg]
            "O&M_factor_per_day": 0.2,  # [fraction of price per in-game day]
            "consumed_resource": {},  # [kg/MWh]
            "base_pollution": 988,  # [kg CO2/MWh]
            "ramping_time": timedelta(minutes=15).total_seconds(),  # [in-game seconds]
            "lifespan": timedelta(days=70).total_seconds(),  # [in-game seconds]
            "wikipedia_link": "https://en.wikipedia.org/wiki/Steam_engine",
            "description": "The O&M costs of the steam engine are composed of 20% fixed costs and 80% variable costs.",
            "danger_description": "Risk of steam explosion",
            "requirements": [],
        },
        "windmill": {
            "name": "Windmill",
            "type": "Renewable",
            "base_price": 22_200,
            "base_power_generation": 3_350_000,
            "base_construction_time": timedelta(days=1, hours=6).total_seconds(),
            "construction_power_factor": 0.56,
            "base_construction_pollution": 1_600,
            "O&M_factor_per_day": 0.013,
            "consumed_resource": {"wind": 0},
            "base_pollution": 0,
            "ramping_time": 0,
            "lifespan": timedelta(days=140).total_seconds(),
            "description": "The amount of electricity generated by the "
            "windmill will vary according to the strength of the wind.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Windmill",
            "danger_description": "Risk of structural failure in high winds",
            "requirements": [],
        },
        "watermill": {
            "name": "Watermill",
            "type": "Renewable",
            "base_price": 15_000,
            "base_power_generation": 2_700_000,
            "base_construction_time": timedelta(days=1, hours=1).total_seconds(),
            "construction_power_factor": 0.48,
            "base_construction_pollution": 2_200,
            "O&M_factor_per_day": 0.014,
            "consumed_resource": {"water": 0},
            "base_pollution": 0,
            "ramping_time": 0,
            "lifespan": timedelta(days=175).total_seconds(),
            "description": "The electricity output of the watermill relies on the flow rate of the river's water.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Watermill",
            "danger_description": "Risk of structural failure due to floods",
            "requirements": [],
        },
        "coal_burner": {
            "name": "Coal burner",
            "type": "Controllable",
            "base_price": 105_000,
            "base_power_generation": 21_000_000,
            "base_construction_time": timedelta(days=11, hours=6).total_seconds(),
            "construction_power_factor": 0.28,
            "base_construction_pollution": 1_100_000,
            "O&M_factor_per_day": 0.024,
            "consumed_resource": {"coal": 640},
            "base_pollution": 1_664,
            "ramping_time": timedelta(hours=2).total_seconds(),
            "lifespan": timedelta(days=210).total_seconds(),
            "description": "The coal burner consumes coal to produce electricity.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Coal-fired_power_station",
            "requirements": [
                ["mechanical_engineering", 1, False],
                ["thermodynamics", 1, False],
                ["warehouse", 1, False],
            ],
        },
        "oil_burner": {
            "name": "Oil burner",
            "type": "Controllable",
            "base_price": 52_000,
            "base_power_generation": 8_000_000,
            "base_construction_time": timedelta(days=2, hours=12).total_seconds(),
            "construction_power_factor": 0.56,
            "base_construction_pollution": 440_000,
            "O&M_factor_per_day": 0.025,
            "consumed_resource": {"oil": 375},
            "base_pollution": 1_181,
            "ramping_time": timedelta(minutes=10).total_seconds(),
            "lifespan": timedelta(days=140).total_seconds(),
            "description": "The oil burner consumes oil to produce electricity.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Fossil_fuel_power_station",
            "requirements": [
                ["mechanical_engineering", 1, False],
                ["thermodynamics", 1, False],
                ["warehouse", 1, False],
            ],
        },
        "gas_burner": {
            "name": "Gas burner",
            "type": "Controllable",
            "base_price": 90_000,
            "base_power_generation": 11_000_000,
            "base_construction_time": timedelta(days=2, hours=12).total_seconds(),
            "construction_power_factor": 0.56,
            "base_construction_pollution": 657_000,
            "O&M_factor_per_day": 0.029,
            "consumed_resource": {"gas": 353},
            "base_pollution": 1_006,
            "ramping_time": timedelta(minutes=8).total_seconds(),
            "lifespan": timedelta(days=140).total_seconds(),
            "description": "The gas burner consumes gas to produce electricity.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Gas-fired_power_facility",
            "danger_description": "Risk of gas leaks",
            "requirements": [
                ["mechanical_engineering", 1, False],
                ["thermodynamics", 1, False],
                ["warehouse", 1, False],
            ],
        },
        "small_water_dam": {
            "name": "Small water dam",
            "type": "Renewable",
            "base_price": 45_000,
            "base_power_generation": 27_500_000,
            "base_construction_time": timedelta(days=12, hours=12).total_seconds(),
            "construction_power_factor": 0.3,
            "base_construction_pollution": 876_000,
            "O&M_factor_per_day": 0.008,
            "consumed_resource": {"hydropower": 0},
            "base_pollution": 0,
            "ramping_time": 0,
            "lifespan": timedelta(days=525).total_seconds(),
            "description": "The electricity output of the small water dam "
            "relies on the flow rate of the river's water.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Hydroelectricity",
            "danger_description": "Risk of structural failure due to floods",
            "requirements": [["civil_engineering", 1, False]],
        },
        "onshore_wind_turbine": {
            "name": "Onshore wind turbine",
            "type": "Renewable",
            "base_price": 270_000,
            "base_power_generation": 1_100_000,
            "base_construction_time": timedelta(days=3, hours=18).total_seconds(),
            "construction_power_factor": 1.3,
            "base_construction_pollution": 420_000,
            "O&M_factor_per_day": 0.013,
            "consumed_resource": {"wind": 0},
            "base_pollution": 0,
            "ramping_time": 0,
            "lifespan": timedelta(days=224).total_seconds(),
            "description": "The amount of electricity generated by the onshore wind turbine will vary according to the "
            "strength of the wind.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Wind_turbine",
            "danger_description": "Risk of structural failure in high winds",
            "requirements": [
                ["aerodynamics", 1, False],
                ["materials", 2, False],
                ["mechanical_engineering", 3, False],
            ],
        },
        "combined_cycle": {
            "name": "Combined cycle",
            "type": "Controllable",
            "base_price": 310_000,
            "base_power_generation": 54_000_000,
            "base_construction_time": timedelta(days=6, hours=6).total_seconds(),
            "construction_power_factor": 0.56,
            "base_construction_pollution": 1_500_000,
            "O&M_factor_per_day": 0.014,
            "consumed_resource": {"gas": 210, "coal": 76},
            "base_pollution": 797,
            "ramping_time": timedelta(hours=1, minutes=15).total_seconds(),
            "lifespan": timedelta(days=245).total_seconds(),
            "description": "The combined cycle power facility consumes coal and gas to produce electricity.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Combined_cycle_power_facility",
            "danger_description": "Risk of gas leaks",
            "requirements": [
                ["thermodynamics", 3, False],
                ["mechanical_engineering", 3, False],
                ["warehouse", 2, False],
            ],
        },
        "nuclear_reactor": {
            "name": "Nuclear reactor",
            "type": "Controllable",
            "base_price": 840_000,
            "base_power_generation": 167_000_000,
            "base_construction_time": timedelta(days=25).total_seconds(),
            "construction_power_factor": 0.08,
            "base_construction_pollution": 6_800_000,
            "O&M_factor_per_day": 0.026,
            "consumed_resource": {"uranium": 0.044},
            "base_pollution": 2,
            "ramping_time": timedelta(hours=13).total_seconds(),
            "lifespan": timedelta(days=350).total_seconds(),
            "description": "The nuclear power plant uses controlled nuclear fission to produce electricity from "
            "uranium.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Nuclear_power_facility",
            "danger_description": "Risk of reactor meltdown",
            "requirements": [
                ["chemistry", 3, False],
                ["nuclear_engineering", 1, False],
                ["warehouse", 3, False],
            ],
        },
        "large_water_dam": {
            "name": "Large water dam",
            "type": "Renewable",
            "base_price": 320_000,
            "base_power_generation": 410_000_000,
            "base_construction_time": timedelta(days=17, hours=12).total_seconds(),
            "construction_power_factor": 0.15,
            "base_construction_pollution": 8_760_000,
            "O&M_factor_per_day": 0.006,
            "consumed_resource": {"hydropower": 0},
            "base_pollution": 0,
            "ramping_time": 0,
            "lifespan": timedelta(days=700).total_seconds(),
            "description": "The electricity output of the large water dam relies on the flow rate of the river's "
            "water.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Hydroelectricity",
            "danger_description": "Risk of structural failure due to floods",
            "requirements": [["civil_engineering", 4, False]],
        },
        "CSP_solar": {
            "name": "Concentrated solar power",
            "type": "Renewable",
            "base_price": 123_000,
            "base_power_generation": 38_000_000,
            "base_construction_time": timedelta(days=7, hours=12).total_seconds(),
            "construction_power_factor": 0.4,
            "base_construction_pollution": 1_260_000,
            "O&M_factor_per_day": 0.017,
            "consumed_resource": {"irradiance": 0},
            "base_pollution": 0,
            "ramping_time": 0,
            "lifespan": timedelta(days=161).total_seconds(),
            "description": "The amount of electricity generated by the concentrated solar power plant will vary "
            "according to the level of irradiance.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Concentrated_solar_power",
            "requirements": [
                ["physics", 5, False],
                ["thermodynamics", 5, False],
            ],
        },
        "PV_solar": {
            "name": "Photovoltaics",
            "type": "Renewable",
            "base_price": 700_000,
            "base_power_generation": 59_000_000,
            "base_construction_time": timedelta(days=1, hours=21).total_seconds(),
            "construction_power_factor": 5,
            "base_construction_pollution": 24_000_000,
            "O&M_factor_per_day": 0.003,
            "consumed_resource": {"irradiance": 0},
            "base_pollution": 0,
            "ramping_time": 0,
            "lifespan": timedelta(days=126).total_seconds(),
            "description": "The amount of electricity generated by the photovoltaic panels will vary according to the "
            "level of irradiance.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Photovoltaics",
            "requirements": [["physics", 6, False], ["materials", 4, False]],
        },
        "offshore_wind_turbine": {
            "name": "Offshore wind turbine",
            "type": "Renewable",
            "base_price": 2_000_000,
            "base_power_generation": 130_000_000,
            "base_construction_time": timedelta(days=10).total_seconds(),
            "construction_power_factor": 1.2,
            "base_construction_pollution": 4_900_000,
            "O&M_factor_per_day": 0.016,
            "consumed_resource": {"wind": 0},
            "base_pollution": 0,
            "ramping_time": 0,
            "lifespan": timedelta(days=266).total_seconds(),
            "description": "The amount of electricity generated by the offshore wind turbine will vary according to "
            "the strength of the wind.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Wind_turbine",
            "danger_description": "Risk of structural failure due to storms",
            "requirements": [
                ["aerodynamics", 3, False],
                ["materials", 4, False],
                ["mechanical_engineering", 6, False],
            ],
        },
        "nuclear_reactor_gen4": {
            "name": "4th generation nuclear",
            "type": "Controllable",
            "base_price": 1_800_000,
            "base_power_generation": 335_000_000,
            "base_construction_time": timedelta(days=30).total_seconds(),
            "construction_power_factor": 0.06,
            "base_construction_pollution": 12_000_000,
            "O&M_factor_per_day": 0.021,
            "consumed_resource": {"uranium": 0.000_57},
            "base_pollution": 3,
            "ramping_time": timedelta(hours=8, minutes=20).total_seconds(),
            "lifespan": timedelta(days=490).total_seconds(),
            "description": "The 4th generation nuclear power plant uses controlled nuclear fission to produce "
            "electricity from natural uranium.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Generation_IV_reactor",
            "danger_description": "Risk of reactor meltdown",
            "requirements": [
                ["chemistry", 5, False],
                ["nuclear_engineering", 5, False],
                ["warehouse", 3, False],
            ],
        },
        "small_pumped_hydro": {
            "name": "Small pumped hydro",
            "type": "Storage",
            "base_price": 19_500,  # [Â¤]
            "base_storage_capacity": 260_000_000,  # [Wh]
            "base_power_generation": 2_600_000,  # [W]
            "base_efficiency": 0.75,
            "base_construction_time": timedelta(days=1, hours=2).total_seconds(),  # [in-game seconds]
            "construction_power_factor": 0.005,  # fraction of capacity demanded during construction
            "base_construction_pollution": 80_000,  # [kg]
            "O&M_factor_per_day": 0.022,  # [fraction of price per in-game day]
            "ramping_time": timedelta(minutes=9).total_seconds(),  # [in-game seconds]
            "lifespan": timedelta(days=525).total_seconds(),  # [in-game seconds]
            "image_extension": "png",
            "initial_efficiency": 0.75,
            "description": "The small pumped hydropower storage pumps water to a higher altitude to store energy.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Pumped-storage_hydroelectricity",
            "requirements": [],
        },
        "compressed_air": {
            "name": "Compressed air",
            "type": "Storage",
            "base_price": 10_700,
            "base_storage_capacity": 2_860_000_000,
            "base_power_generation": 12_000_000,
            "base_efficiency": 0.52,
            "base_construction_time": timedelta(days=3, hours=18).total_seconds(),
            "construction_power_factor": 0.001,
            "base_construction_pollution": 570_000,
            "O&M_factor_per_day": 0.05,
            "ramping_time": timedelta(minutes=5).total_seconds(),
            "lifespan": timedelta(days=189).total_seconds(),
            "image_extension": "jpg",
            "initial_efficiency": 0.52,
            "description": "The compressed air storage facility stores mechanical energy in the form of compressed gas "
            "in the ground.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Compressed-air_energy_storage",
            "requirements": [
                ["mechanical_engineering", 2, False],
                ["thermodynamics", 2, False],
            ],
        },
        "molten_salt": {
            "name": "Molten salt",
            "type": "Storage",
            "base_price": 27_500,
            "base_storage_capacity": 3_000_000_000,
            "base_power_generation": 55_000_000,
            "base_efficiency": 0.63,
            "base_construction_time": timedelta(days=5).total_seconds(),
            "construction_power_factor": 0.001,
            "base_construction_pollution": 1_200_000,
            "O&M_factor_per_day": 0.06,
            "ramping_time": timedelta(hours=1).total_seconds(),
            "lifespan": timedelta(days=105).total_seconds(),
            "image_extension": "jpg",
            "initial_efficiency": 0.63,
            "description": "The Molten salt storage stores molten salt at high temperatures to be used for electricity "
            "production.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Thermal_energy_storage",
            "requirements": [
                ["mechanical_engineering", 2, False],
                ["thermodynamics", 3, False],
            ],
        },
        "large_pumped_hydro": {
            "name": "Large pumped hydro",
            "type": "Storage",
            "base_price": 166_000,
            "base_storage_capacity": 4_200_000_000,
            "base_power_generation": 249_000_000,
            "base_efficiency": 0.8,
            "base_construction_time": timedelta(days=19, hours=9).total_seconds(),
            "construction_power_factor": 0.003,
            "base_construction_pollution": 3_000_000,
            "O&M_factor_per_day": 0.029,
            "ramping_time": timedelta(minutes=16).total_seconds(),
            "lifespan": timedelta(days=630).total_seconds(),
            "image_extension": "jpg",
            "initial_efficiency": 0.8,
            "description": "The large pumped hydropower storage pumps water to a higher altitude to store a large "
            "amount of energy.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Pumped-storage_hydroelectricity",
            "requirements": [["civil_engineering", 3, False]],
        },
        "hydrogen_storage": {
            "name": "Hydrogen hydrolysis",
            "type": "Storage",
            "base_price": 420_000,
            "base_storage_capacity": 30_000_000_000,
            "base_power_generation": 90_000_000,
            "base_efficiency": 0.33,
            "base_construction_time": timedelta(days=2, hours=12).total_seconds(),
            "construction_power_factor": 0.000_25,
            "base_construction_pollution": 2_400_000,
            "O&M_factor_per_day": 0.007,
            "ramping_time": timedelta(minutes=8).total_seconds(),
            "lifespan": timedelta(days=315).total_seconds(),
            "image_extension": "jpg",
            "initial_efficiency": 0.33,
            "description": "The hydrogen storage stores hydrogen that has been generated by electrolysis and can be "
            "transformed into electricity.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Hydrogen_storage",
            "requirements": [["chemistry", 3, False], ["materials", 3, False]],
        },
        "lithium_ion_batteries": {
            "name": "Lithium-ion batteries",
            "type": "Storage",
            "base_price": 660_000,
            "base_storage_capacity": 3_200_000_000,
            "base_power_generation": 86_000_000,
            "base_efficiency": 0.69,
            "base_construction_time": timedelta(days=3, hours=18).total_seconds(),
            "construction_power_factor": 0.1,
            "base_construction_pollution": 8_000_000,
            "O&M_factor_per_day": 0.000_7,
            "ramping_time": timedelta(minutes=3).total_seconds(),
            "lifespan": timedelta(days=112).total_seconds(),
            "image_extension": "jpg",
            "initial_efficiency": 0.69,
            "description": "The lithium ion battery storage facility stores electricity with high efficiency.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Lithium-ion_battery",
            "requirements": [["chemistry", 4, False], ["materials", 4, False]],
        },
        "solid_state_batteries": {
            "name": "Solid state batteries",
            "type": "Storage",
            "base_price": 1_000_000,
            "base_storage_capacity": 5_000_000_000,
            "base_power_generation": 107_000_000,
            "base_efficiency": 0.79,
            "base_construction_time": timedelta(days=3, hours=3).total_seconds(),
            "construction_power_factor": 0.07,
            "base_construction_pollution": 6_000_000,
            "O&M_factor_per_day": 0.000_5,
            "ramping_time": timedelta(minutes=3).total_seconds(),
            "lifespan": timedelta(days=210).total_seconds(),
            "image_extension": "jpg",
            "initial_efficiency": 0.79,
            "description": "The solid state battery storage facility stores electricity with high efficiency.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Solid-state_battery",
            "requirements": [
                ["chemistry", 6, False],
                ["materials", 5, False],
                ["physics", 6, False],
            ],
        },
        "laboratory": {
            "name": "Laboratory",
            "type": "Functional facility",
            "base_price": 32_000,  # [Â¤]
            "base_construction_time": timedelta(hours=7).total_seconds(),  # [in-game seconds]
            "base_construction_energy": 750_000,  # [Wh]
            "base_construction_pollution": 100_000,  # [kg]
            "price_multiplier": 1.5,
            "time_factor": 0.9,
            "description": "The laboratory is needed to research Technologies.",
            "wikipedia_link": "",
            "requirements": [],
        },
        "warehouse": {
            "name": "Warehouse",
            "type": "Functional facility",
            "base_price": 25_000,
            "base_construction_time": timedelta(days=1, hours=1).total_seconds(),
            "base_construction_energy": 100_000,
            "base_construction_pollution": 25_000,
            "price_multiplier": 1.5,
            "capacity_factor": 1.5,
            "description": "The warehouse stores physical resources.",
            "wikipedia_link": "",
            "requirements": [],
        },
        "industry": {
            "name": "Industry",
            "type": "Functional facility",
            "base_price": 2_400,
            "base_construction_time": timedelta(hours=1, minutes=40).total_seconds(),
            "base_construction_energy": 40_000,
            "base_construction_pollution": 4_000,
            "base_power_consumption": 200_000,  # [W]
            "base_income_per_day": 8_000,  # [Â¤/in-game day]
            "universal_income_per_day": 4_400,  # [Â¤/in-game day]
            "price_multiplier": 1.32,
            "power_factor": 1.4,
            "income_factor": 1.35,
            "description": "The industry generates revenue from energy. The Power consumption of the Industry varies "
            "daily and seasonally.",
            "wikipedia_link": "",
            "requirements": [],
        },
        "carbon_capture": {
            "name": "Carbon capture",
            "type": "Functional facility",
            "base_price": 250_000,
            "base_construction_time": timedelta(days=2, hours=2).total_seconds(),
            "base_construction_energy": 50_000_000,
            "base_construction_pollution": 250_000,
            "O&M_factor_per_day": 0.000_49,  # not used for now
            "base_power_consumption": 10_000_000,  # [W]
            "base_absorption_per_day": 0.000_025,  # [fraction of atmospheric CO2 absorbed per in-game day]
            "price_multiplier": 1.5,
            "absorption_factor": 1.55,
            "power_factor": 1.5,
            "description": "Carbon capture consumes energy to absorb and store CO2 underground.",
            "wikipedia_link": "",
            "requirements": [
                ["mathematics", 3, False],
                ["physics", 3, False],
                ["chemistry", 3, False],
            ],
        },
        "coal_mine": {
            "name": "Coal mine",
            "type": "Extraction facility",
            "base_price": 28_500,  # [Â¤]
            "base_construction_time": timedelta(days=1, hours=16).total_seconds(),  # [in-game seconds]
            "construction_power_factor": 1.5,  # fraction of power consumption during construction
            "base_construction_pollution": 200_000,  # [kg]
            "O&M_factor_per_day": 0.061,  # [fraction of price per in-game day]
            "base_power_consumption": 3_000_000,  # [W]
            "base_pollution": 0.065,  # [kg CO2/kg extracted]
            "lifespan": timedelta(days=161).total_seconds(),  # [in-game seconds]
            "base_extraction_rate_per_day": 0.001_8,  # [fraction of total stock that can be extracted every in-game
            # day by one mine]
            "description": "The coal mine extracts coal from the ground using electricity.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Coal_mining",
            "requirements": [
                ["mineral_extraction", 1, False],
                ["warehouse", 1, False],
            ],
        },
        "oil_field": {
            "name": "Oil field",
            "type": "Extraction facility",
            "base_price": 120_000,
            "base_construction_time": timedelta(days=3, hours=3).total_seconds(),
            "construction_power_factor": 2,
            "base_construction_pollution": 400_000,
            "O&M_factor_per_day": 0.09,
            "base_power_consumption": 7_300_000,
            "base_pollution": 0.302,
            "lifespan": timedelta(days=84).total_seconds(),
            "base_extraction_rate_per_day": 0.018,
            "description": "The oil field extracts oil from the ground using electricity.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Extraction_of_petroleum",
            "requirements": [
                ["mineral_extraction", 2, False],
                ["warehouse", 1, False],
            ],
        },
        "gas_drilling_site": {
            "name": "Gas drilling site",
            "type": "Extraction facility",
            "base_price": 110_000,
            "base_construction_time": timedelta(days=3, hours=3).total_seconds(),
            "construction_power_factor": 2.5,
            "base_construction_pollution": 700_000,
            "O&M_factor_per_day": 0.09,
            "base_power_consumption": 5_100_000,
            "base_pollution": 0.523,
            "lifespan": timedelta(days=70).total_seconds(),
            "base_extraction_rate_per_day": 0.015,
            "description": "The gas drilling site extracts gas from the ground using electricity.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Natural_gas",
            "requirements": [
                ["mineral_extraction", 2, False],
                ["warehouse", 1, False],
            ],
        },
        "uranium_mine": {
            "name": "Uranium mine",
            "type": "Extraction facility",
            "base_price": 350_000,
            "base_construction_time": timedelta(days=5).total_seconds(),
            "construction_power_factor": 2,
            "base_construction_pollution": 500_000,
            "O&M_factor_per_day": 0.12,
            "base_power_consumption": 18_000_000,
            "base_pollution": 86,
            "lifespan": timedelta(days=126).total_seconds(),
            "base_extraction_rate_per_day": 0.001_8,
            "description": "The uranium mine extracts uranium from the ground using electricity.",
            "wikipedia_link": "https://en.wikipedia.org/wiki/Uranium_mining",
            "requirements": [
                ["mineral_extraction", 5, False],
                ["warehouse", 3, False],
            ],
        },
        "mathematics": {
            "name": "Mathematics",
            "type": "Technology",
            "base_price": 36_000,  # [Â¤]
            "base_construction_time": timedelta(days=1, hours=1).total_seconds(),  # [in-game seconds]
            "base_construction_energy": 5_000_000,  # [Wh]
            "price_multiplier": 1.3,
            "affected_facilities": [],
            "description": "Mathematics is the fundamental tool of science.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2023W&ansicht=ALLE&lerneinheitId=173657&",  # cspell:disable-line
            "requirements": [["laboratory", 1, False]],
        },
        "mechanical_engineering": {
            "name": "Mechanical engineering",
            "type": "Technology",
            "base_price": 36_000,
            "base_construction_time": timedelta(days=1, hours=1).total_seconds(),
            "base_construction_energy": 5_000_000,
            "price_multiplier": 1.3,
            "price_factor": 1.15,
            "prod_factor": 1.2,
            "affected_facilities": [
                "steam_engine",
                "watermill",
                "coal_burner",
                "oil_burner",
                "gas_burner",
                "combined_cycle",
                "compressed_air",
                "molten_salt",
            ],
            "description": "Mechanical engineering drives innovation in machine design and functionality.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2023W&ansicht=ALLE&lerneinheitId=172711&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 1, False],
                ["mathematics", 1, False],
            ],
        },
        "thermodynamics": {
            "name": "Thermodynamics",
            "type": "Technology",
            "base_price": 36_000,
            "base_construction_time": timedelta(days=1, hours=1).total_seconds(),
            "base_construction_energy": 5_000_000,
            "price_multiplier": 1.3,
            "efficiency_factor": 1 / (1 - 0.075),
            "affected_facilities": [
                "steam_engine",
                "coal_burner",
                "oil_burner",
                "gas_burner",
                "combined_cycle",
                "nuclear_reactor",
                "nuclear_reactor_gen4",
                "compressed_air",
                "molten_salt",
            ],
            "description": "Thermodynamics explores the dynamics of energy transfer and transformation.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2023W&ansicht=ALLE&lerneinheitId=173159&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 1, False],
                ["mathematics", 1, False],
            ],
        },
        "physics": {
            "name": "Physics",
            "type": "Technology",
            "base_price": 36_000,
            "base_construction_time": timedelta(days=1, hours=1).total_seconds(),
            "base_construction_energy": 5_000_000,
            "price_multiplier": 1.3,
            "price_factor": 1.15,
            "prod_factor": 1.2,
            "affected_facilities": [
                "CSP_solar",
                "PV_solar",
                "hydrogen_storage",
                "lithium_ion_batteries",
                "solid_state_batteries",
            ],
            "description": "Physics delves into the empirical exploration and comprehension of natural phenomena.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2024S&ansicht=ALLE&lerneinheitId=177068&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 1, False],
                ["mathematics", 1, False],
                ["chemistry", -2, False],
            ],
        },
        "building_technology": {
            "name": "Building Technology",
            "type": "Technology",
            "base_price": 56_000,
            "base_construction_time": timedelta(days=1, hours=16).total_seconds(),
            "base_construction_energy": 16_000_000,
            "price_multiplier": 1.3,
            "time_factor": 0.9,
            "affected_facilities": [],  # (all power and storage facilities)
            "description": "Building technology enables more efficient construction of facilities.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2023W&ansicht=ALLE&lerneinheitId=172899&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 1, False],
                ["transport_technology", -2, False],
            ],
        },
        "mineral_extraction": {
            "name": "Mineral extraction",
            "type": "Technology",
            "base_price": 32_000,
            "base_construction_time": timedelta(hours=20).total_seconds(),
            "base_construction_energy": 8_000_000,
            "price_multiplier": 1.4,
            "price_factor": 1.2,
            "extract_factor": 0.30,
            "energy_factor": 0.25,
            "pollution_factor": 0.05,
            "affected_facilities": [
                "coal_mine",
                "oil_field",
                "gas_drilling_site",
                "uranium_mine",
            ],
            "description": "Mineral extraction improves the extraction process of natural resources.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2023W&ansicht=ALLE&lerneinheitId=173723&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 1, False],
                ["mathematics", 1, False],
            ],
        },
        "transport_technology": {
            "name": "Transport technology",
            "type": "Technology",
            "base_price": 56_000,
            "base_construction_time": timedelta(days=1, hours=16).total_seconds(),
            "base_construction_energy": 24_000_000,
            "price_multiplier": 1.4,
            "time_factor": 0.9,
            "energy_factor": 1.035,
            "affected_facilities": [],
            "description": "Transport technology enables more efficient shipments of natural resources.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2023W&ansicht=ALLE&lerneinheitId=172788&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 2, False],
                ["mechanical_engineering", 1, False],
            ],
        },
        "materials": {
            "name": "Materials",
            "type": "Technology",
            "base_price": 84_000,
            "base_construction_time": timedelta(days=2, hours=12).total_seconds(),
            "base_construction_energy": 48_000_000,
            "price_multiplier": 1.4,
            "price_factor": 0.9,
            "construction_energy_factor": 0.9,
            "affected_facilities": [
                "onshore_wind_turbine",
                "offshore_wind_turbine",
                "PV_solar",
                "lithium_ion_batteries",
                "solid_state_batteries",
            ],
            "description": "Material sciences are essential to discover and improve advanced materials.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2024S&ansicht=ALLE&lerneinheitId=178386&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 2, False],
                ["chemistry", 0, False],
            ],
        },
        "civil_engineering": {
            "name": "Civil engineering",
            "type": "Technology",
            "base_price": 28_000,
            "base_construction_time": timedelta(hours=20).total_seconds(),
            "base_construction_energy": 16_000_000,
            "price_multiplier": 1.5,
            "price_factor": 1.2,
            "prod_factor": 1.2,
            "capacity_factor": 1.05,
            "affected_facilities": [
                "small_water_dam",
                "large_water_dam",
                "small_pumped_hydro",
                "large_pumped_hydro",
            ],
            "description": "Civil engineering enables the realization of large infrastructure projects.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2023W&ansicht=ALLE&lerneinheitId=173564&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 3, False],
                ["mathematics", 2, False],
                ["building_technology", 2, False],
            ],
        },
        "aerodynamics": {
            "name": "Aerodynamics",
            "type": "Technology",
            "base_price": 84_000,
            "base_construction_time": timedelta(days=2, hours=12).total_seconds(),
            "base_construction_energy": 60_000_000,
            "price_multiplier": 1.5,
            "price_factor": 1.15,
            "prod_factor": 1.2,
            "affected_facilities": [
                "windmill",
                "onshore_wind_turbine",
                "offshore_wind_turbine",
            ],
            "description": "Aerodynamics studies the principles governing airflow.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2023W&ansicht=ALLE&lerneinheitId=172719&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 3, False],
                ["physics", 3, False],
            ],
        },
        "chemistry": {
            "name": "Chemistry",
            "type": "Technology",
            "base_price": 60_000,
            "base_construction_time": timedelta(days=1, hours=16).total_seconds(),
            "base_construction_energy": 40_000_000,
            "price_multiplier": 1.4,
            "price_factor": 1.25,
            "inefficiency_factor": 0.9,
            "affected_facilities": [
                "hydrogen_storage",
                "lithium_ion_batteries",
                "solid_state_batteries",
            ],
            "description": "Chemistry unlocks the mysteries of molecular interactions and transformations.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2023W&ansicht=ALLE&lerneinheitId=174071&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 3, False],
                ["physics", -1, False],
            ],
        },
        "nuclear_engineering": {
            "name": "Nuclear engineering",
            "type": "Technology",
            "base_price": 140_000,
            "base_construction_time": timedelta(days=3, hours=18).total_seconds(),
            "base_construction_energy": 108_000_000,
            "price_multiplier": 1.5,
            "price_factor": 1.2,
            "prod_factor": 1.25,
            "affected_facilities": [
                "nuclear_reactor",
                "nuclear_reactor_gen4",
            ],
            "description": "Nuclear engineering is used to improve nuclear power facilities.",
            "wikipedia_link": "https://www.vvz.ethz.ch/Vorlesungsverzeichnis/lerneinheit.view?"  # cspell:disable-line
            "lang=en&semkez=2023W&ansicht=ALLE&lerneinheitId=172874&",  # cspell:disable-line
            "requirements": [
                ["laboratory", 4, False],
                ["physics", 3, False],
                ["mechanical_engineering", 3, False],
            ],
        },
    },
    "warehouse_capacities": {
        "coal": 3_000_000 / 1.5,  # [kg]
        "oil": 300_000 / 1.5,
        "gas": 1_000_000 / 1.5,
        "uranium": 5_000 / 1.5,
    },
    "transport": {
        "time_per_tile": timedelta(hours=5, minutes=20).total_seconds(),  # [in-game seconds/distance unit]
        "energy_per_kg_per_tile": 5,  # [Wh/kg/distance unit]
    },
}

wind_power_curve = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0.001_345,
    0.008_21,
    0.015_678,
    0.024_249,
    0.034_402,
    0.046_221,
    0.059_494,
    0.074,
    0.089_609,
    0.106_56,
    0.125_18,
    0.145_81,
    0.168_63,
    0.193_65,
    0.220_89,
    0.250_34,
    0.281_97,
    0.315_75,
    0.351_65,
    0.389_68,
    0.430_03,
    0.472_9,
    0.518_44,
    0.566_01,
    0.614_38,
    0.662_3,
    0.708_58,
    0.752_33,
    0.792_72,
    0.828_94,
    0.860_76,
    0.888_69,
    0.913_32,
    0.935_14,
    0.954_07,
    0.969_78,
    0.981_93,
    0.990_48,
    0.996_02,
    0.999_22,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0.8,
    0.6,
    0.4,
    0.2,
    0,
]  # from 0 to 100 km/h

river_discharge_seasonal = [
    0.26,
    0.23,
    0.3,
    0.5,
    0.85,
    1,
    0.96,
    0.85,
    0.55,
    0.4,
    0.35,
    0.3,
]  # from january to december


def player_lab_workers_for_level(lab_level: int) -> int:
    """Returns how many lab workers are available for the specified lab level"""
    return (lab_level + 2) // 3


def warehouse_capacity_for_level(warehouse_level, resource):
    """Returns how much capacity in kg a player with a warehouse with
    `warehouse_level` has for the specified `resource`"""
    if warehouse_level == 0:
        return 0
    else:
        return (
            const_config["warehouse_capacities"][resource]
            * const_config["assets"]["warehouse"]["capacity_factor"] ** warehouse_level
        )


class Config(object):
    """Config object that contains the modified data for a specific player considering the technologies he owns"""

    def __init__(self):
        self.for_player = {}

    def update_config_for_user(self, player_id):
        """This function updates the config values according to the players technology level"""
        self.for_player[player_id] = {
            "industry": {},
            "carbon_capture": {},
            "warehouse_capacities": {},
            "transport": {},
        }
        assets = self.for_player[player_id]
        player: Player = Player.query.get(player_id)

        # calculating industry energy consumption and income
        assets["industry"]["power_consumption"] = (
            const_config["assets"]["industry"]["base_power_consumption"]
            * const_config["assets"]["industry"]["power_factor"] ** player.industry
        )
        assets["industry"]["income_per_day"] = (
            const_config["assets"]["industry"]["base_income_per_day"]
            * const_config["assets"]["industry"]["income_factor"] ** player.industry
        )
        # basic universal income of 540 per in-game day
        assets["industry"]["income_per_day"] += const_config["assets"]["industry"]["universal_income_per_day"]

        # calculating carbon capture power consumption and CO2 absorption
        assets["carbon_capture"]["power_consumption"] = (
            const_config["assets"]["carbon_capture"]["base_power_consumption"]
            * const_config["assets"]["carbon_capture"]["power_factor"] ** player.carbon_capture
        )
        assets["carbon_capture"]["absorption"] = (
            const_config["assets"]["carbon_capture"]["base_absorption_per_day"]
            * const_config["assets"]["carbon_capture"]["absorption_factor"] ** player.carbon_capture
        )

        # calculating the maximum storage capacity from the warehouse level
        for resource in const_config["warehouse_capacities"]:
            assets["warehouse_capacities"][resource] = warehouse_capacity_for_level(player.warehouse, resource)

        # calculating the transport speed and energy consumption from the level of transport technology
        assets["transport"]["time_per_tile"] = (
            const_config["transport"]["time_per_tile"]
            * const_config["assets"]["transport_technology"]["time_factor"] ** player.transport_technology
        )
        assets["transport"]["power_per_kg"] = (
            const_config["transport"]["energy_per_kg_per_tile"]
            * const_config["assets"]["transport_technology"]["energy_factor"] ** player.transport_technology
            * 3600
            / assets["transport"]["time_per_tile"]
        )

        # setting the number of workers
        player.construction_workers = player.building_technology + 1
        player.lab_workers = player_lab_workers_for_level(player.laboratory)

    def __getitem__(self, player_id):
        if player_id not in self.for_player:
            self.update_config_for_user(player_id)
        return self.for_player[player_id]


config = Config()


climate_events = {
    "flood": {
        "name": "Flood",
        "base_probability": 0.2,  # [probability per in-game day]
        "description": "A flood has occurred and destroyed some parts of the infrastructure. The recovery from this "
        "event will take {duration} days and cost {cost}.",
        "cost_fraction": 0.6,  # fraction of the player's industry revenue that he has to pay
        "duration": timedelta(days=6).total_seconds(),  # [in-game seconds]
        "affected_tiles": 1,
        "destruction_chance": {  # chance of destruction for each facility type
            "watermill": 0.6,
            "small_water_dam": 0.05,  # destruction affects the 3 downstream tiles
            "large_water_dam": 0.01,  # destruction affects the 15 downstream tiles
            "steam_engine": 0.05,
            "coal_burner": 0.03,
            "oil_burner": 0.03,
            "gas_burner": 0.03,
            "combined_cycle": 0.02,
            "nuclear_reactor": 0.01,  # not a dangerous accident but the plant has to be shut down permanently for
            # safety reasons
            "nuclear_reactor_gen4": 0.005,  # not a dangerous accident but the plant has to be shut down permanently for
            # safety reasons
        },
        "industry_destruction_chance": 0.5,  # chance of leveling down the industry
    },
    "heat_wave": {
        "name": "Heat wave",
        "base_probability": 0.35,
        "description": "A heat wave has occurred and is impacting the population. The recovery from this event will "
        "take {duration} days and cost {cost}.",
        "cost_fraction": 0.25,
        "duration": timedelta(days=3).total_seconds(),
        "affected_tiles": 2,  # (a radius of 2 so 7 tiles)
        "destruction_chance": {
            "lithium_ion_batteries": 0.05,
            "solid_state_batteries": 0.02,
        },
        "industry_destruction_chance": 0,
    },
    "cold_wave": {
        "name": "Cold wave",
        "base_probability": 0.35,
        "description": "A cold wave has occurred and is impacting the population. The recovery from this event will "
        "take {duration} days and cost {cost}.",
        "cost_fraction": 0.25,
        "duration": timedelta(days=3).total_seconds(),
        "affected_tiles": 2,  # (a radius of 2 so 7 tiles)
        "destruction_chance": {},
        "industry_destruction_chance": 0,
    },
    "hurricane": {
        "name": "Hurricane",
        "base_probability": 0.07,
        "description": "A hurricane has occurred and destroyed some parts of the infrastructure. The recovery from "
        "this event will take {duration} days and cost {cost}.",
        "cost_fraction": 0.8,
        "duration": timedelta(days=9).total_seconds(),
        "affected_tiles": 3,  # (a radius of 3 so 19 tiles)
        "destruction_chance": {
            "windmill": 0.5,
            "onshore_wind_turbine": 0.3,
            "offshore_wind_turbine": 0.15,
            "PV_solar": 0.05,
            "CSP_solar": 0.1,
        },
        "industry_destruction_chance": 0.9,
    },
    "wildfire": {
        "name": "Wildfire",
        "base_probability": 0.25,
        "description": "A wildfire has occurred and destroyed some parts of the infrastructure. The recovery from this "
        "event will take {duration} days and cost {cost}.",
        "cost_fraction": 0.3,
        "duration": timedelta(days=3).total_seconds(),
        "affected_tiles": 2,  # (a radius of 2 so 7 tiles)
        "destruction_chance": {
            "windmill": 0.1,
            "onshore_wind_turbine": 0.05,
            "watermill": 0.05,
            "steam_engine": 0.02,
            "coal_burner": 0.02,
            "oil_burner": 0.02,
            "gas_burner": 0.02,
            "combined_cycle": 0.02,
            "PV_solar": 0.1,
            "CSP_solar": 0.02,
        },
        "industry_destruction_chance": 0.3,
    },
}
